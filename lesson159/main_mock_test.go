// Code generated by MockGen. DO NOT EDIT.
// Source: main.go
//
// Generated by this command:
//
//	mockgen -source=main.go -package=main -destination=main_mock_test.go
//

// Package main is a generated GoMock package.
package main

import (
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// Mockcalc is a mock of calc interface.
type Mockcalc struct {
	ctrl     *gomock.Controller
	recorder *MockcalcMockRecorder
}

// MockcalcMockRecorder is the mock recorder for Mockcalc.
type MockcalcMockRecorder struct {
	mock *Mockcalc
}

// NewMockcalc creates a new mock instance.
func NewMockcalc(ctrl *gomock.Controller) *Mockcalc {
	mock := &Mockcalc{ctrl: ctrl}
	mock.recorder = &MockcalcMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *Mockcalc) EXPECT() *MockcalcMockRecorder {
	return m.recorder
}

// Sub mocks base method.
func (m *Mockcalc) Sub(a, b int) int {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Sub", a, b)
	ret0, _ := ret[0].(int)
	return ret0
}

// Sub indicates an expected call of Sub.
func (mr *MockcalcMockRecorder) Sub(a, b any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Sub", reflect.TypeOf((*Mockcalc)(nil).Sub), a, b)
}
